Index: app/src/main/java/com/example/foodify/data/database/CollectionDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foodify.data.database\r\n\r\nimport androidx.room.Delete\r\nimport androidx.room.Insert\r\nimport androidx.room.OnConflictStrategy\r\nimport androidx.room.Query\r\nimport androidx.room.Update\r\nimport com.example.foodify.data.local.Collection\r\nimport com.example.foodify.data.local.CollectionRecipeCrossRef\r\nimport com.example.foodify.data.local.Recipe\r\nimport kotlinx.coroutines.flow.Flow\r\n\r\ninterface CollectionDao {\r\n    @Insert(onConflict = OnConflictStrategy.REPLACE)\r\n    suspend fun insertCollection(collection: Collection)\r\n\r\n    @Update\r\n    suspend fun updateCollection(collection: Collection)\r\n\r\n    @Delete\r\n    suspend fun deleteCollection(collection: Collection)\r\n\r\n    @Insert(onConflict = OnConflictStrategy.REPLACE)\r\n    suspend fun insertCollectionRecipeCrossRef(crossRef: CollectionRecipeCrossRef)\r\n\r\n    @Delete\r\n    suspend fun deleteCollectionRecipeCrossRef(crossRef: CollectionRecipeCrossRef)\r\n\r\n    @Query(\"SELECT * FROM collections\")\r\n    fun getAllCollections(): Flow<List<Collection>>\r\n\r\n    @Query(\"SELECT R.* FROM recipes R INNER JOIN collection_recipe_cross_ref CR ON R.id = CR.recipeId WHERE CR.collectionId = :collectionId\")\r\n    fun getRecipesForCollection(collectionId: String): Flow<List<Recipe>>\r\n\r\n    @Query(\"SELECT * FROM collections WHERE id = :collectionId\")\r\n    suspend fun getCollectionById(collectionId: String): Collection?\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/foodify/data/database/CollectionDao.kt b/app/src/main/java/com/example/foodify/data/database/CollectionDao.kt
--- a/app/src/main/java/com/example/foodify/data/database/CollectionDao.kt	(revision b81e38a48e6091bfaecc2e943e652570229d468d)
+++ b/app/src/main/java/com/example/foodify/data/database/CollectionDao.kt	(date 1756049207916)
@@ -1,5 +1,6 @@
 package com.example.foodify.data.database
 
+import androidx.room.Dao
 import androidx.room.Delete
 import androidx.room.Insert
 import androidx.room.OnConflictStrategy
@@ -9,7 +10,7 @@
 import com.example.foodify.data.local.CollectionRecipeCrossRef
 import com.example.foodify.data.local.Recipe
 import kotlinx.coroutines.flow.Flow
-
+@Dao
 interface CollectionDao {
     @Insert(onConflict = OnConflictStrategy.REPLACE)
     suspend fun insertCollection(collection: Collection)
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n    alias(libs.plugins.kotlin.compose)\r\n    id(\"com.google.dagger.hilt.android\")\r\n    id(\"com.google.devtools.ksp\")\r\n}\r\n\r\n\r\nandroid {\r\n    namespace = \"com.example.foodify\"\r\n    compileSdk = 36\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.foodify\"\r\n        minSdk = 24\r\n        targetSdk = 36\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n    // ViewModel\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-compose:2.9.2\")\r\n    //Navigation\r\n    implementation(\"androidx.navigation:navigation-compose:2.9.2\")\r\n    //Glide\r\n    implementation(\"com.github.bumptech.glide:glide:4.15.1\")\r\n    // Room\r\n    implementation(\"androidx.room:room-runtime:2.7.2\")\r\n    ksp(\"androidx.room:room-compiler:2.7.2\")\r\n    implementation(\"androidx.room:room-ktx:2.7.2\")\r\n    // Datastore\r\n    implementation(\"androidx.datastore:datastore-preferences:1.1.7\")\r\n    // Dagger Hilt\r\n    implementation(\"com.google.dagger:hilt-android:2.57\")\r\n    ksp(\"com.google.dagger:hilt-android-compiler:2.57\")\r\n    implementation(\"androidx.hilt:hilt-navigation-compose:1.2.0\")\r\n    // Splash screen\r\n    implementation(libs.core.splashscreen)\r\n    //Gson for type conversion list of Recipe inside Collection\r\n    implementation(\"com.google.code.gson:gson:2.10.1\")\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision b81e38a48e6091bfaecc2e943e652570229d468d)
+++ b/app/build.gradle.kts	(date 1756049099793)
@@ -43,7 +43,8 @@
 }
 
 dependencies {
-
+    implementation(platform("androidx.compose:compose-bom:2024.08.00"))
+    implementation("androidx.compose.material:material-icons-extended")
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.lifecycle.runtime.ktx)
     implementation(libs.androidx.activity.compose)
@@ -77,6 +78,8 @@
     implementation("androidx.hilt:hilt-navigation-compose:1.2.0")
     // Splash screen
     implementation(libs.core.splashscreen)
+    implementation("io.coil-kt:coil-compose:2.4.0")
+    implementation("com.google.accompanist:accompanist-flowlayout:0.32.0")
     //Gson for type conversion list of Recipe inside Collection
     implementation("com.google.code.gson:gson:2.10.1")
 }
\ No newline at end of file
Index: app/src/main/java/com/example/foodify/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foodify\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.activity.viewModels\r\nimport androidx.core.splashscreen.SplashScreen.Companion.installSplashScreen\r\nimport androidx.lifecycle.lifecycleScope\r\nimport com.example.foodify.data.local.Recipe\r\nimport com.example.foodify.data.local.Collection\r\nimport com.example.foodify.presentation.navigation.NavigationStack\r\nimport com.example.foodify.presentation.theme.FoodifyTheme\r\nimport com.example.foodify.presentation.viewmodels.LocalViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport kotlinx.coroutines.launch\r\n\r\n@AndroidEntryPoint\r\nclass MainActivity : ComponentActivity() {\r\n    val viewModel by viewModels<LocalViewModel>()\r\n//    val recipe = Recipe(\r\n//        id = 1,\r\n//        title = \"Pizza\",\r\n//        ingredients = listOf(\"Pizza Ingredients\", \"Pizza Ingredients\"),\r\n//        steps = listOf(\"Pizza Instructions\", \"Pizza Instructions\"),\r\n//        tags = listOf(\"Pizza\", \"Italian\"),\r\n//    )\r\n//    val collection = Collection(\r\n//        id = 1,\r\n//        title = \"Pizza\",\r\n//        recipes = listOf(recipe,recipe)\r\n//    )\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        installSplashScreen()\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            FoodifyTheme {\r\n                NavigationStack()\r\n            }\r\n        }\r\n        lifecycleScope.launch {\r\n//            testRecipeInsertionAndRetrieval(viewModel,recipe)\r\n//            testCollectionInsertionAndRetrieval(viewModel,collection)\r\n        }\r\n    }\r\n    private suspend fun testRecipeInsertionAndRetrieval(viewModel: LocalViewModel,recipe: Recipe){\r\n            viewModel.insertRecipe(recipe)\r\n//            val recipes = viewModel.getRecipes()\r\n//            println(recipes)\r\n    }\r\n//    private suspend fun testCollectionInsertionAndRetrieval(viewModel: LocalViewModel,collection: Collection){\r\n//        viewModel.insertCollection(collection)\r\n//        val collections = viewModel.getCollections()\r\n//        println(collections)\r\n//    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/foodify/MainActivity.kt b/app/src/main/java/com/example/foodify/MainActivity.kt
--- a/app/src/main/java/com/example/foodify/MainActivity.kt	(revision b81e38a48e6091bfaecc2e943e652570229d468d)
+++ b/app/src/main/java/com/example/foodify/MainActivity.kt	(date 1756049262727)
@@ -3,33 +3,25 @@
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
-import androidx.activity.enableEdgeToEdge
-import androidx.activity.viewModels
-import androidx.core.splashscreen.SplashScreen.Companion.installSplashScreen
-import androidx.lifecycle.lifecycleScope
-import com.example.foodify.data.local.Recipe
-import com.example.foodify.data.local.Collection
-import com.example.foodify.presentation.navigation.NavigationStack
 import com.example.foodify.presentation.theme.FoodifyTheme
-import com.example.foodify.presentation.viewmodels.LocalViewModel
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.launch
-
+/*
 @AndroidEntryPoint
 class MainActivity : ComponentActivity() {
     val viewModel by viewModels<LocalViewModel>()
-//    val recipe = Recipe(
-//        id = 1,
-//        title = "Pizza",
-//        ingredients = listOf("Pizza Ingredients", "Pizza Ingredients"),
-//        steps = listOf("Pizza Instructions", "Pizza Instructions"),
-//        tags = listOf("Pizza", "Italian"),
-//    )
-//    val collection = Collection(
-//        id = 1,
-//        title = "Pizza",
-//        recipes = listOf(recipe,recipe)
-//    )
+    val recipe = Recipe(
+        id = 1,
+        title = "Pizza",
+        ingredients = listOf("Pizza Ingredients", "Pizza Ingredients"),
+        steps = listOf("Pizza Instructions", "Pizza Instructions"),
+        tags = listOf("Pizza", "Italian"),
+    )
+    val collection = Collection(
+        id = 1,
+        title = "Pizza",
+        recipes = listOf(recipe,recipe)
+    )
     override fun onCreate(savedInstanceState: Bundle?) {
         installSplashScreen()
         super.onCreate(savedInstanceState)
@@ -40,19 +32,35 @@
             }
         }
         lifecycleScope.launch {
-//            testRecipeInsertionAndRetrieval(viewModel,recipe)
-//            testCollectionInsertionAndRetrieval(viewModel,collection)
+            testRecipeInsertionAndRetrieval(viewModel,recipe)
+            testCollectionInsertionAndRetrieval(viewModel,collection)
         }
     }
     private suspend fun testRecipeInsertionAndRetrieval(viewModel: LocalViewModel,recipe: Recipe){
             viewModel.insertRecipe(recipe)
-//            val recipes = viewModel.getRecipes()
-//            println(recipes)
+            val recipes = viewModel.getRecipes()
+            println(recipes)
+    }
+    private suspend fun testCollectionInsertionAndRetrieval(viewModel: LocalViewModel,collection: Collection){
+        viewModel.insertCollection(collection)
+        val collections = viewModel.getCollections()
+        println(collections)
     }
-//    private suspend fun testCollectionInsertionAndRetrieval(viewModel: LocalViewModel,collection: Collection){
-//        viewModel.insertCollection(collection)
-//        val collections = viewModel.getCollections()
-//        println(collections)
-//    }
 }
+*/
+@AndroidEntryPoint
+class MainActivity : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContent {
+            FoodifyTheme {
+
+
+                SearchScreen()
+            }
+        }
+    }
+}
+
+
 
